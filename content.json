{"meta":{"title":"GollumLin's Blog","subtitle":null,"description":"GollumLin的Blog","author":"GollumLin","url":"https://gollumlin.github.io","root":"/"},"pages":[{"title":"404","date":"2021-03-30T13:39:57.000Z","updated":"2021-03-30T13:47:26.233Z","comments":false,"path":"404.html","permalink":"https://gollumlin.github.io/404","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"about","date":"2021-03-30T12:56:26.000Z","updated":"2021-03-30T13:46:53.192Z","comments":false,"path":"about/index.html","permalink":"https://gollumlin.github.io/about/","excerpt":"","text":""},{"title":"categories","date":"2021-03-30T12:55:21.000Z","updated":"2021-03-30T13:47:53.461Z","comments":false,"path":"categories/index.html","permalink":"https://gollumlin.github.io/categories/","excerpt":"","text":""},{"title":"tags","date":"2021-03-30T12:56:02.000Z","updated":"2021-03-30T13:47:43.808Z","comments":false,"path":"tags/index.html","permalink":"https://gollumlin.github.io/tags/","excerpt":"","text":""}],"posts":[{"title":"Mysql 绿色版的配置","slug":"mysql绿色版配置","date":"2021-04-27T05:28:32.000Z","updated":"2021-04-27T07:09:33.896Z","comments":false,"path":"posts/cb9ff319.html","link":"","permalink":"https://gollumlin.github.io/posts/cb9ff319","excerpt":"本文介绍的是mysql 5.5.62 免安装版的 配置过程","text":"本文介绍的是mysql 5.5.62 免安装版的 配置过程 一、下载 &amp; 解压​ 前往 Download ，选择需要的版本（.zip）进行下载（以 5.5.62为例）。让互殴解压到自己常用的位置（建议软件安装时按类型设置目录，方便管理） 二、配置a. 设置环境变量「两种方式」 第一种：直接在path中新增 –&gt; mysql 所在路径\\bin\\ 第二种：类似 JAVA ，新增一个MySQL_HOME项（mysql路径），然后再在Path中新增 –&gt; %MySQL_HOME%\\bin b. MySQL配置文件 my.ini 在mysql目录下找到 my-small.ini，复制并重命名为 my.ini 「因为解压后的目录中并没有 my-default.ini ，所以选择 my-small.ini，其他的 .ini 可不可以没有尝试」 新增内容 # 路径替换成对应的 basedir = D:\\Program\\mysql-5.5.62-winx64 datadir = D:\\Program\\mysql-5.5.62-winx64\\data default-character-set = utf8 [WinMySQLadmin] Server = D:\\Program\\mysql-5.5.62-winx64\\bin\\mysqld.exe c. 安装服务，并启动mysqld install # 初始化-- mysqld --initialize-insecure --user=mysql 貌似可以跳过 net start mysql d. 初始化root密码mysql root # 或者 mysql -uroot，一开始无需密码即可进行 use mysql alter user &#39;root@localhost&#39; identified by &#39;123456&#39; 三、 问题 所谓的删除原有的 data 文件夹： 不要删除，可以先移动到其他位置。 有很多说是先删除data，然后执行上面提到的 初始化 会创建data 并初始化相关文件。 然而解压后，源文件就包含 data 。 我移走了 data ，执行初始化后 只生成了日志文件（总共4个），且 不知道是不是my.ini 配置了 datadir ，得先创建一个空文件夹 data ，否则会报错。 服务安装成功，也进行了初始化。之后启动服务时出现了 1607 错误（好象是）。 打开日志，说是缺插件什么的。总之搜了半天问题，没一个回答能解决。 最后又重新解压，配置完 my.ini 之后，直接安装服务、启动。 ok！成功了！！！","categories":[{"name":"Practice","slug":"Practice","permalink":"https://gollumlin.github.io/categories/Practice/"}],"tags":[{"name":"Learn","slug":"Learn","permalink":"https://gollumlin.github.io/tags/Learn/"}]},{"title":"Godzilla.vs.Kong观后感","slug":"Godzilla-vs-Kong观后感","date":"2021-03-31T14:42:49.000Z","updated":"2021-04-01T04:34:53.341Z","comments":false,"path":"posts/7d48f32d.html","link":"","permalink":"https://gollumlin.github.io/posts/7d48f32d","excerpt":"刚刚看完 哥斯拉大战金刚（Godzilla vs Kong），简短地记录一下感受吧😁（顺带练练手）","text":"刚刚看完 哥斯拉大战金刚（Godzilla vs Kong），简短地记录一下感受吧😁（顺带练练手） 一、Soundtrack &amp; Trailer------------------------------------------------------------------------------------------------- 🤞先放上原声带和预告🤞 ------------------------------------------------------------------------------------------------- .player{ position: relative; width: 100%; height: 0; padding-bottom: 75%; } .video{ position: absolute; width: 100%; height: 100%; left: 0; top: 0; } 二、Afterthought1.特效这方面没啥可说的👍 2.剧情（Questions）① 骷髅岛（Skull Island）发生了什么 -- 影片开头Kong所处的人造？生态站 -- 原住民（伊维族）只剩下一个小女孩？ ② Godzilla 对其他 Titan 的感应 Godzilla独有？Kong就没有远距离感应到Godzilla ③ 地心世界 -- 地心的环境、生物 -- Kong的斧子充能时，Godzilla直接原子吐息从地表穿到了地心 -- 能源 ④ 磁悬浮运输通道 Apex公司给Hong Kong基地运送Kong天敌以作机械Godzilla的实验对手 直接从American运到Hong Kong！！！ 3.总结-- 商业性：特效、Titan间的对战，看得很爽 -- 故事：需要填的坑比较多，期待会有一个完整的怪兽世界 三、Poster Show","categories":[{"name":"Life's record","slug":"Life-s-record","permalink":"https://gollumlin.github.io/categories/Life-s-record/"}],"tags":[{"name":"观影记录","slug":"观影记录","permalink":"https://gollumlin.github.io/tags/%E8%A7%82%E5%BD%B1%E8%AE%B0%E5%BD%95/"}]},{"title":"Blog的部署过程","slug":"Blog的部署过程","date":"2021-03-30T03:24:59.000Z","updated":"2021-04-01T04:30:59.308Z","comments":false,"path":"posts/37287.html","link":"","permalink":"https://gollumlin.github.io/posts/37287","excerpt":"这篇文章记录了博客的搭建过程以及所踩的一些坑。(感觉写的乱七八糟，先就这了吧，以后熟悉了再完善😂)","text":"这篇文章记录了博客的搭建过程以及所踩的一些坑。(感觉写的乱七八糟，先就这了吧，以后熟悉了再完善😂) 一、环境的搭建（win10） 安装 git [^1] 进入 官网 下载 安装一路默认即可（注意自定义路径） 安装成功后，开始菜单会有 git bash 选项 git 的初始化 及相关内容就不在此赘述了，会另写一篇文章来记录 安装 Node.js [^2] 进入 官网 或 中文网 后，选择合适的版本点击下载（官方推荐 LTS [^5]） 安装还是比较简单的，自定义安装路径后就没有什么需要注意的地方，一路走默认即可。当然，安装选项可以看一看，还是比较容易理解的。非必要的可以不选，比如 Online documentation [^6] 检测：node --version。显示版本号即说明安装成功 建议：可以把安装后的目录打包存档，其他设备上使用时，只需将备份文件放到 指定目录下+ 配置环境变量 即可复用，无需再次安装。 已验证可行的有： ​ – jdk ​ – Eclipse 安装 npm [^3] npm 会随 Node.js 一同安装，所以无需另外安装 查看 npm 的版本： npm -v 『图就不放了😁』 更新：npm i npm -g [^7] 或 使用淘宝镜像 npm i cnpm -g --registry=https://registery.npm.taobao.org [^8] 安装 Hexo [^4] npm i hexo-cli -g 二、github准备 登录帐号 创建一个仓库，仓库名：xxx(自定义).github.io ，设为 Public 三、初始化 Blog 在本地找一个 ”地儿“ 来安置 初始化：hexo init 博客名 寻找合适的主题，安装（npm i 主题名 或 git clone 主题地址 themes/主题名 ） 修改配置文件（_config.yml）,修改主题，连接Github 阅读主题的官方文档，进行个性化设置（在博客目录下创建_config.主题名.yml ，自行修改设定） 新建文章，本地编辑完并“调试”完成后即可推送到Github 四、踩的坑 本地有多个仓库时，如何指定SSH key来进行相应远程仓库的访问 生成key的时候自定义文件名 eg： id_rsa_blog 在 .ssh [^9]下新建config 文件 config 配置 # ****** 此处的注释只是为了说明，不建议写入文件中 ****** # Host ***.github.com 可以自定义 # HostName 则是由远程仓库决定，比如：gitee.com # IdentityFile 是私匙的地址 # 其余选项不修改 Host blog.github.com HostName github.com User git IdentityFile ~/.ssh/id_rsa_gollumlin IdentitiesOnly yes Host git.github.com HostName github.com User git IdentityFile ~/.ssh/id_rsa_git IdentitiesOnly yes 无法连接到 Github # 原配置 deploy: type: &#39;git&#39; repo: https://github.com/GollumLin/gollumlin.github.io.git branch: main # ###################### # 修改后成功连接的配置 deploy: type: &#39;git&#39; repo: git@blog.github.com:GollumLin/gollumlin.github.io.git branch: main 主题的自定义 ！！！看官方文档！！！ 不要自己瞎搞，浪费时间不说，结果还很糟。 文章中插入图片、视频、音乐 插入图片 # 有两种方法 # 一、本地（不推荐，毕竟空间有限） 在/source/ 新建一个图片文件夹来存放图片，使用的时候：图片文件夹名/图片 # 二、使用图床（加载速度）-- 最后选择的是jsdeliver + github的方式 # 主题中使用的也是上述方式 -- 新建一个仓库（储存图片） -- 使用方式 https://cdn.jsdelivr.net/gh/用户名/仓库名/图片（有路径的加上路径） 插入音乐、视频 # 不推荐本地方式，因为空间有限，而且效果不尽如人意 # 推荐嵌入外链 eg： &lt;iframe frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=100% height=86 src=&#39;//music.163.com/outchain/player?type=2&amp;id=548651034&amp;auto=0&amp;height=66&#39;/&gt; # 视频自定义样式 &lt;style&gt; .player&#123; position: relative; width: 100%; height: 0; padding-bottom: 75%; &#125; .video&#123; position: absolute; width: 100%; height: 100%; left: 0; top: 0; &#125; &lt;/style&gt; eg： &lt;div class=&quot;player&quot;&gt; &lt;iframe class=&#39;video&#39; src=&quot;//player.bilibili.com/player.html?aid=70204950&amp;bvid=BV11E411D7UU&amp;cid=121623340&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt; &lt;/div&gt; .player{ position: relative; width: 100%; height: 0; padding-bottom: 75%; } .video{ position: absolute; width: 100%; height: 100%; left: 0; top: 0; } 文章的链接包含中文 # 使用 abbrlink 插件 npm i hexo-abbrlink --save # 修改 _config.yml 文件 permalink: posts/:abbrlink.html # 此处可以自己设置，也可以直接使用 :/abbrlink abbrlink: alg: crc32 #算法： crc16(default) and crc32 rep: hex #进制： dec(default) and hex pretty_urls: trailing_index: false # Set to false to remove trailing &#39;index.html&#39; from permalinks # 不显示后缀（.html） trailing_html: false # Set to false to remove trailing &#39;.html&#39; from permalinks # 最终显示效果：https://gollumlin.github.io/posts/37287 mardown 渲染（一言难尽） -- 摘要 &lt;!--more--&gt; -- 本地使用的是Typora，hexo自带的并不能完美的渲染，比如脚注。也有第三方的插件，不过懒得折腾了，先凑活着看吧。 [^1]: 一个分布式版本管理系统 [^2]: 基于chrome javascript运行时建立的平台，性能好、速度快。 [^3]: Node.js 的包管理工具 [^4]: 一款快速、简洁且高效的博客框架（官方描述） [^5]: 即 long term suport 的缩写，字面意思「长期维护」-- bug更少，也更稳定。正是推荐的理由所在。 [^6]: 选择该选项后，会在开始菜单文件夹里添加网站和说明文当的快捷方式 [^7]: -g 意味着全局安装（作用于任何项目，安装的包放在Node的安装目录下的 .../node_modules/ ），否则即为 本地安装（只作用于单个项目，安装的包在项目的 /node_modules/ ）。此外还有 开发环境（即开发项目的环境） 与 生产环境（是指成品项目所处的环境，如 服务器）的区分。 [^8]: cnpm 是淘宝团队维护的国内镜像，因为国外的服务器连接速度不理想。 [^9]: 位于 C:/Users/***/.ssh","categories":[{"name":"Practice","slug":"Practice","permalink":"https://gollumlin.github.io/categories/Practice/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"https://gollumlin.github.io/tags/Blog/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-03-29T02:12:06.830Z","updated":"2021-04-01T04:31:46.919Z","comments":false,"path":"posts/16107.html","link":"","permalink":"https://gollumlin.github.io/posts/16107","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"Practice","slug":"Practice","permalink":"https://gollumlin.github.io/categories/Practice/"}],"tags":[{"name":"Hello World","slug":"Hello-World","permalink":"https://gollumlin.github.io/tags/Hello-World/"}]}],"categories":[{"name":"Practice","slug":"Practice","permalink":"https://gollumlin.github.io/categories/Practice/"},{"name":"Life's record","slug":"Life-s-record","permalink":"https://gollumlin.github.io/categories/Life-s-record/"}],"tags":[{"name":"Learn","slug":"Learn","permalink":"https://gollumlin.github.io/tags/Learn/"},{"name":"观影记录","slug":"观影记录","permalink":"https://gollumlin.github.io/tags/%E8%A7%82%E5%BD%B1%E8%AE%B0%E5%BD%95/"},{"name":"Blog","slug":"Blog","permalink":"https://gollumlin.github.io/tags/Blog/"},{"name":"Hello World","slug":"Hello-World","permalink":"https://gollumlin.github.io/tags/Hello-World/"}]}